# Makefile.in generated by automake 1.6.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = ./FreeDroid.app/Contents/Resources/freedroid
exec_prefix = ./FreeDroid.app/Contents/MacOS

bindir = ./FreeDroid.app/Contents/MacOS/
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/freedroid
pkglibdir = $(libdir)/freedroid
pkgincludedir = $(includedir)/freedroid
top_builddir = ..

ACLOCAL = ${SHELL} /Users/jasonk/projects/freedroid-1.0.2/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /Users/jasonk/projects/freedroid-1.0.2/missing --run autoconf
AUTOMAKE = ${SHELL} /Users/jasonk/projects/freedroid-1.0.2/missing --run automake-1.6
AUTOHEADER = ${SHELL} /Users/jasonk/projects/freedroid-1.0.2/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = i686-apple-darwin8.10.1

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /Users/jasonk/projects/freedroid-1.0.2/missing --run tar
AWK = awk
CC = gcc
DEPDIR = .deps
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
PACKAGE = freedroid
SDL_CFLAGS = -I/usr/local/include/SDL -D_GNU_SOURCE=1 -D_THREAD_SAFE
SDL_CONFIG = /usr/local/bin/sdl-config
SDL_LIBS = -L/usr/local/lib -lSDLmain -lSDL -framework Cocoa -framework OpenGL
STRIP = 
VERSION = 1.0.2
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/X11R6/lib
X_PRE_LIBS =  -lSM -lICE
am__include = include
am__quote = 
install_sh = /Users/jasonk/projects/freedroid-1.0.2/install-sh

bin_PROGRAMS = freedroid

#win32_res = freedroid.rc
win32_res = 
#freedroid_LDADD = freedroid.coff

freedroid_SOURCES = menu.c graphics.c  map.c   init.c  ship.c \
	takeover.c bullet.c  influ.c  misc.c  text.c  sound.c \
	enemy.c input.c  main.c  view.c BFont.c defs.h \
	map.h vars.h takeover.h global.h \
	text.h proto.h struct.h system.h BFont.h maped.h \
	SDL_rotozoom.c SDL_rotozoom.h highscore.c \
	getopt.c getopt1.c getopt.h \
	$(win32_res)


WINDRES = i586-mingw32msvc-windres
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = freedroid$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

#am__objects_1 =
am__objects_1 =
am_freedroid_OBJECTS = menu.$(OBJEXT) graphics.$(OBJEXT) map.$(OBJEXT) \
	init.$(OBJEXT) ship.$(OBJEXT) takeover.$(OBJEXT) \
	bullet.$(OBJEXT) influ.$(OBJEXT) misc.$(OBJEXT) text.$(OBJEXT) \
	sound.$(OBJEXT) enemy.$(OBJEXT) input.$(OBJEXT) main.$(OBJEXT) \
	view.$(OBJEXT) BFont.$(OBJEXT) SDL_rotozoom.$(OBJEXT) \
	highscore.$(OBJEXT) getopt.$(OBJEXT) getopt1.$(OBJEXT) \
	$(am__objects_1)
freedroid_OBJECTS = $(am_freedroid_OBJECTS)
#freedroid_DEPENDENCIES = freedroid.coff
freedroid_DEPENDENCIES =
freedroid_LDFLAGS =

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = 
LDFLAGS = -arch i386 -arch ppc
LIBS = -lvorbis -lSDL_mixer -lSDL_image -lpng -lz -ljpeg -lSDL -lm  -L/usr/local/lib -lSDLmain -lSDL -framework Cocoa -framework OpenGL
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
#DEP_FILES = ./$(DEPDIR)/BFont.Po ./$(DEPDIR)/SDL_rotozoom.Po \
#	./$(DEPDIR)/bullet.Po ./$(DEPDIR)/enemy.Po \
#	./$(DEPDIR)/getopt.Po ./$(DEPDIR)/getopt1.Po \
#	./$(DEPDIR)/graphics.Po ./$(DEPDIR)/highscore.Po \
#	./$(DEPDIR)/influ.Po ./$(DEPDIR)/init.Po \
#	./$(DEPDIR)/input.Po ./$(DEPDIR)/main.Po \
#	./$(DEPDIR)/map.Po ./$(DEPDIR)/menu.Po \
#	./$(DEPDIR)/misc.Po ./$(DEPDIR)/ship.Po \
#	./$(DEPDIR)/sound.Po ./$(DEPDIR)/takeover.Po \
#	./$(DEPDIR)/text.Po ./$(DEPDIR)/view.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -D __MACOSX__ -arch ppc -arch i386  -I/usr/local/include/SDL -D_GNU_SOURCE=1 -D_THREAD_SAFE  -DFD_DATADIR='"$(pkgdatadir)"'
DIST_SOURCES = $(freedroid_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(freedroid_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
freedroid$(EXEEXT): $(freedroid_OBJECTS) $(freedroid_DEPENDENCIES) 
	@rm -f freedroid$(EXEEXT)
	$(LINK) $(freedroid_LDFLAGS) $(freedroid_OBJECTS) $(freedroid_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/BFont.Po
#include ./$(DEPDIR)/SDL_rotozoom.Po
#include ./$(DEPDIR)/bullet.Po
#include ./$(DEPDIR)/enemy.Po
#include ./$(DEPDIR)/getopt.Po
#include ./$(DEPDIR)/getopt1.Po
#include ./$(DEPDIR)/graphics.Po
#include ./$(DEPDIR)/highscore.Po
#include ./$(DEPDIR)/influ.Po
#include ./$(DEPDIR)/init.Po
#include ./$(DEPDIR)/input.Po
#include ./$(DEPDIR)/main.Po
#include ./$(DEPDIR)/map.Po
#include ./$(DEPDIR)/menu.Po
#include ./$(DEPDIR)/misc.Po
#include ./$(DEPDIR)/ship.Po
#include ./$(DEPDIR)/sound.Po
#include ./$(DEPDIR)/takeover.Po
#include ./$(DEPDIR)/text.Po
#include ./$(DEPDIR)/view.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
#	source='$<' object='$@' libtool=no 
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
#	source='$<' object='$@' libtool=no 
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c `cygpath -w $<`
CCDEPMODE = depmode=none
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic distclean distclean-compile distclean-depend \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

freedroid.coff: freedroid.rc ../graphics/paraicon.ico
	$(WINDRES) -i freedroid.rc -o freedroid.coff -O COFF
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
